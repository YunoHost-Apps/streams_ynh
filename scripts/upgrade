#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source /usr/share/yunohost/helpers

#=================================================
# LOAD SETTINGS
#=================================================
ynh_script_progression --message="Loading settings..." --weight=1

email=$(ynh_user_get_info --username=$admin --key=mail)

#=================================================
# CHECK VERSION
#=================================================

upgrade_type=$(ynh_check_app_version_changed)

#=================================================
# STANDARD UPGRADE STEPS
#=================================================
# ENSURE DOWNWARD COMPATIBILITY
#=================================================
ynh_script_progression --message="Ensuring downward compatibility..." --weight=1

# If fpm_footprint doesn't exist, create it
if [ -z "$fpm_footprint" ]; then
    fpm_footprint=low
    ynh_app_setting_set --app=$app --key=fpm_footprint --value=$fpm_footprint
fi

# If fpm_free_footprint doesn't exist, create it
if [ -z "$fpm_free_footprint" ]; then
    fpm_free_footprint=0
    ynh_app_setting_set --app=$app --key=fpm_free_footprint --value=$fpm_free_footprint
fi

# If fpm_usage doesn't exist, create it
if [ -z "$fpm_usage" ]; then
    fpm_usage=low
    ynh_app_setting_set --app=$app --key=fpm_usage --value=$fpm_usage
fi

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================

if [ "$upgrade_type" == "UPGRADE_APP" ]
then
	ynh_script_progression --message="Upgrading source files..." --weight=1

    # First we save what we need to keep
    mv $install_dir/store $data_dir/
    mv $install_dir/cache $data_dir/
    mv $install_dir/php.log $data_dir/

    # Then we remove the previous install
    ynh_secure_remove $install_dir

    # We make the install cloning the repo
    mkdir -p "$install_dir"
    chown -R $app:www-data "$install_dir"

    git config --system --add safe.directory $install_dir

    git clone https://codeberg.org/streams/streams.git "$install_dir" --quiet

    # We restore what we previously saved
    mv $data_dir/store $install_dir/
    mv $data_dir/cache $install_dir/
    mv $data_dir/php.log $install_dir/

    chmod -R o-rwx "$install_dir"
    chown -R $app:www-data "$install_dir"
    chmod -R 775 $install_dir/store $install_dir/cache
fi

#=================================================
# PHP-FPM CONFIGURATION
#=================================================
ynh_script_progression --message="Upgrading PHP-FPM configuration..." --weight=1

# Create a dedicated PHP-FPM config
ynh_add_fpm_config --phpversion=$phpversion --usage=$fpm_usage --footprint=$fpm_footprint

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# COMPOSER
#=================================================
ynh_script_progression --message="Pulling in external libraries with Composer..."

ynh_install_composer
chown -R $app:www-data "$install_dir"

#=================================================
# ADDONS
#=================================================
ynh_script_progression --message="Installing addons..."

pushd $install_dir
    ynh_exec_as $app git config pull.rebase false
    ynh_exec_as $app util/add_addon_repo https://codeberg.org/streams/streams-addons.git zaddons
    cd /var/www/$app/extend/addon/zaddons
    ynh_exec_as $app git config pull.rebase false
popd

#=================================================
# SPECIFIC UPGRADE
#=================================================
# UPDATE A CONFIG FILE
#=================================================
ynh_script_progression --message="Updating a configuration file..." --weight=1

timezone=$(</etc/timezone)
max_imported_follow=10

ynh_add_config --template="../conf/htconfig.sample.php" --destination="$install_dir/.htconfig.php"

chmod 600 "$install_dir/.htconfig.php"
chown $app:$app "$install_dir/.htconfig.php"

#=================================================
# UPGRADE CRON JOB
#=================================================
ynh_script_progression --message="Setuping cron job..." --weight=1

# We're ready for the moment when 'Code' is renamed 'src'
# Check for renaming of 'Code' folder to 'src'
if [ -d /var/www/__APP__/src ]
then
    sed -i 's/Code/src/' ../conf/cronjobs
fi

# Set up cron job
ynh_add_config --template="../conf/cronjobs" --destination="/etc/cron.d/$app"
chown root: "/etc/cron.d/$app"
chmod 644 "/etc/cron.d/$app"
# Add daily update script
ynh_add_config --template="../conf/daily-update.sh" --destination="/home/yunohost.app/$app/daily-update.sh"
chown root: "/home/yunohost.app/$app/daily-update.sh"

#=================================================
# GENERIC FINALIZATION
#=================================================
# SETUP LOGROTATE
#=================================================
ynh_script_progression --message="Upgrading logrotate configuration..." --weight=1

# Use logrotate to manage app-specific logfile(s)
ynh_use_logrotate "$install_dir/php.log"

# Create a dedicated Fail2Ban config
ynh_add_fail2ban_config --logpath="$install_dir/php.log" --failregex="^.*auth\.php.*failed login attempt.*from IP <HOST>.*$" --max_retry="5"

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Upgrade of $app completed" --last
